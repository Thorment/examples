package javaFXBasics;

import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

public class Main extends Application {
	@Override
	public void start(Stage primaryStage) {
		try {
			BorderPane root = new BorderPane();// Bühnenbild kreiren

			HBox hBox = new HBox(); // Anlegen einer H(orizontal)-Box
			VBox vBox = new VBox(); // Anlegen einer V(ertikal) -Box

			Button button1 = new Button("Button 1 - Horizontal"); // Erstellen+beschriften
			Button button2 = new Button("Button 2 - Horizontal"); // von verschiedenen knöpfen
			Button button3 = new Button("Button 3 - Vertikal"); // Benennenung erfolgt als String
			Button button4 = new Button("Button 4 - Vertikal"); //
			Label label1 = new Label(); // Erstellung eines Textfields
			Image image = new Image(getClass().getResourceAsStream("/beispiel.jpg")); // Beispiel Bild wird importiert
			Label label2 = new Label(); // Label 2 wird für das Bild erschaffen
			label2.setGraphic(new ImageView(image)); // das Bild wird dem label 2 zugeordnet
			hBox.getChildren().addAll(button1, button2, label2); // hinzufügen der Buttons der Horizontalen Box
			vBox.getChildren().addAll(button3, button4, label1); // hinzufügen der Buttons der Vertikalen Box
			root.setTop(vBox); // Positionieren und einfügen der vBox
			root.setCenter(hBox); // Positionieren und einfügen der hBox

			button1.setOnAction(new EventHandler<ActionEvent>() {// Hier wird button 2 unsichtbar/sichtbar

				@Override
				public void handle(ActionEvent event) {
					if (button2.getOpacity() == 1) {
						button2.setOpacity(0);
					} else {
						button2.setOpacity(1);
					}

				}

			});
			button3.setOnAction(new EventHandler<ActionEvent>() { // Button wird gedrückt - Label zeigt an welcher
																	// button gedrückt wird.

				@Override
				public void handle(ActionEvent event) {
					Button clickedButton = (Button) event.getSource();

					label1.setText("Sie haben " + clickedButton.getText() + " gedrückt!");

				}

			});

			Scene scene = new Scene(root, 400, 400);// Szene erstellen (noch nicht zugewiesen)
			primaryStage.setScene(scene);// Szene der Stage zuweisen
			primaryStage.show();// Bühne zeigen

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static void main(String[] args) {
		launch(args);// Starten Java Fx
	}
}
